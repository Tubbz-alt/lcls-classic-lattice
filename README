=======================================================================================
README of LCLS optics files

This README describes how to deal with the source file management of the LCLS MAD
decks through CVS, how to release changes, and how to update the relevant wb pages.

Auth: Greg White, 8-Apr-2014.
Mod:  Greg White, 22-Aug-2014,
      Remove option to make install without giving directory name. User must
      give a directory name, which SHOULD be based on the CVS tag. 
=======================================================================================

0. Prerequisites. 

   mad8: You will need the mad version 8 executable. If on SLAC AFS, the you can use 
   Mark's script which detects architecture etc; it's in 
   /afs/slac.stanford.edu/u/ad/mdw/mad8.52/mad. "mad8" must be either a 
   command on your system, or you must set the MAD8 macro when running make below. Eg

   make MAD8=/afs/slac.stanford.edu/u/ad/mdw/mad8.52/mad all


1. Acquire the LCLS lattice files by CVS

   The LCLS lattice files are in SLAC's Code Management System (CVS) repository.
   You can get the files from any internet connected computer (you don't have to be
   in the SLAC network) using a CVS client. 

   You must tell your CVS the location of the CVS repository (where our lattice files
   are). You can do that in 2 ways. First, by using -d on every cvs command. Eg

      cvs -d :ext:YOURUSERNAME@rhel6-64.slac.stanford.edu:/afs/slac/g/lcls/cvs co optics/etc

      where <YOURUSERNAME> is your login id on the remote computer.

   Alternatively, set the CVSROOT environment variable:
   Using bourne or bash shell:
      $ export CVSROOT=":ext:<YOURUSERNAME>@rhel6-64.slac.stanford.edu:/afs/slac/g/lcls/cvs"   
   Using csh or tcsh shell:
      $ setenv CVSROOT ":ext:<YOURUSERNAME>@rhel6-64.slac.stanford.edu:/afs/slac/g/lcls/cvs"

   Depending on how you access CVS and the type of server, you may need also to set CSS_RSH.
   At SLAC using AFS in csh, setenv CVS_RSH "ssh".   
 
   Then you can cvs checkout the lattice files, and the necessary scripts. e.g.:

      $ cvs co optics/etc/lattice/lcls2
      $ cvs co optics/etc/script

 
2. To compute optics using MAD8

   Having acquired the lattice files, such as with CVS above, then
   cd to the directory containing your mad8 input files. These are probably
   named *.mad8 and *.xsif. Then execute the mad8 command on the mad8 file, e.g.:

      $ cd optics/etc/lattice/lcls
      $ mad8 LCLS2sc_main.mad8


3. Alternatively you can use "make" for running lattice. 
 
      $ make                   - Run mad8 on LCLS_MAIN.mad8 

   This produces all the print, tape and ps files as you'd expect.


4. The makefile also knows how to create a number of associated files:
       
      $ make all                 - run MAD, and also make the following files:

        a. <beampath>.pdf        - PDF equivalent of the .ps optics plots
	b. <beampath>_lines.dat  - list for each element the "display groups" 
                                   of which that element is part. NOTE 1.
        c. <beampath>.dot        - Description of the "hierarchy" of the beampath in
                                   terms of elements and their arrangement in lines.
        d. <beampath>_map.pdf    - A PDF rendering of the hierarchy of the beampath in
                                   terms of elements and their arrangement in lines.
        e. <beampath>_mapicon.gif  Just a little gif of the map file, used on the web site.
 
        NOTE 1. If no elementdevice.dat file is in the directory, then no 
       <beampath>_lines.dat file is produced. 


5. To publish the new set of decks, plus the MAD outputs and associated files, 
   to the web site http://www.slac.stanford.edu/grp/ad/model/output/lcls
    
       $ make INSTALLDIR=v31MAR14 install
                             - Copies the lattice files output from mad8, to the
                               named directory inder INSTALLROOT (see defintion
                               below; e.g. to :
                                  /afs/slac/www/grp/ad/model/output/lcls/v31MAR14/

       $ make installlatest  - Copies the lattice files output from mad8, 
                               to /afs/slac/www/grp/ad/model/output/lcls2/latest/ 


    When making a first publication of a new version, do BOTH of the above.
    Subsequently, when making updates to a previous release, our practice is to 
    only do the make installlatest.

6. To put your changed files back in CVS.

   The process of putting your edited files back in CVS, so they become the latest,
   is called "cvs check in", or sometimes "cvs commit" after the command that does it.

   First, change directory back up to the directory *containing* the optics/ directory.
   Then issue the cvs commit command from there. E.g.:

      cd ../../../..
      cvs commit -m "comment" optics       

   This will check in all the changed files. Of course, one can commit only single 
   files at a time too.

   You can keep working on your checked out directory, and re-checkin when you want to.
   But in that case, use cvs update periodically to check n oone has done a commit
   on files while yours is in development. These workflow matters are best handled 
   by the many guides to CVS on the web. A good one is:
   http://www.cs.rit.edu/~csci142/Misc/cvscheat.pdf

